name: Build, Test

on:
  pull_request:
    branches: ["master"]
  push:
    branches: ["master"]
  workflow_dispatch:

jobs:
  install:
    name: "Install"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install node_modules
        uses: OffchainLabs/actions/node-modules/install@main

  test-sdk:
    name: "Test SDK"
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore node_modules
        uses: OffchainLabs/actions/node-modules/restore@main

      - uses: ./.github/actions/create-env-file
        with:
          NEXT_PUBLIC_INFURA_KEY: ${{ secrets.NEXT_PUBLIC_INFURA_KEY }}

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test:ci:sdk

  test-ui:
    name: "Test UI"
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore node_modules
        uses: OffchainLabs/actions/node-modules/restore@main

      - uses: ./.github/actions/create-env-file
        with:
          NEXT_PUBLIC_INFURA_KEY: ${{ secrets.NEXT_PUBLIC_INFURA_KEY }}

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test:ci:ui

  audit:
    name: "Audit"
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore node_modules
        uses: OffchainLabs/actions/node-modules/restore@main

      - name: Run audit
        run: yarn audit:ci

  check-formatting:
    name: "Check Formatting"
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore node_modules
        uses: OffchainLabs/actions/node-modules/restore@main

      - name: Check formatting with Prettier
        run: yarn prettier:check

  e2e:
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore node_modules
        uses: OffchainLabs/actions/node-modules/restore@main

      - uses: ./.github/actions/create-env-file
        with:
          NEXT_PUBLIC_INFURA_KEY: ${{ secrets.NEXT_PUBLIC_INFURA_KEY }}

      - name: Build
        run: yarn build

      - name: Remove immutable
        run: chattr -i ./packages/arb-token-bridge-ui/.env.local

      - name: Chown workspace
        run: chown -R $(whoami) .

      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # pin@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f03ac48505955848960e80bbb68046aa35c7b9e7 # pin@v1

      - name: Cache Docker layers
        uses: actions/cache@6998d139ddd3e68c71e9e398d8e40b71a2f39812 # pin@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Run e2e tests
        run: |
          docker-compose -f docker-compose.ci.yml --env-file medium-res.env up --build --exit-code-from synpress
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          NETWORK_NAME: mainnet
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
          DOCKER_DEFAULT_PLATFORM: linux/amd64
          NGROK_AUTH: ${{ secrets.NGROK_AUTH }}

      - name: Archive e2e artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # pin@v2
        if: always()
        with:
          name: e2e-artifacts-docker
          path: |
            docker/videos
            docker/videos-ci
            docker/screenshots
        continue-on-error: true
