name: Build, Test

on:
  pull_request:
    branches: ["master"]
  push:
    branches: ["master"]
  workflow_dispatch:

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check cache for "yarn.lock"
        id: cache
        uses: martijnhols/actions-cache/check@v3
        with:
          path: |
            "**/node_modules"
            ~/.cache/Cypress
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Save "node_modules" to cache
        if: steps.cache.outputs.cache-hit != 'true'
        uses: martijnhols/actions-cache/save@v3
        with:
          path: "**/node_modules"
          key: ${{ steps.cache.outputs.primary-key }}

      - name: Save Cypress binary to cache
        if: steps.cache.outputs.cache-hit != 'true'
        uses: martijnhols/actions-cache/save@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-binary-${{ steps.cache.outputs.primary-key }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v3

      - name: Restore "node_modules" from cache
        uses: ./.github/actions/restore-cache

      - name: Build
        run: yarn build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            ./packages/arb-token-bridge-ui/build
            ./packages/token-bridge-sdk/dist
            ./packages/use-wallet/dist

  test-sdk:
    name: Test SDK
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Restore "node_modules" from cache
        uses: ./.github/actions/restore-cache

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: ./packages

      - name: Test
        run: yarn test:ci:sdk

  test-ui:
    name: Test UI
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Restore "node_modules" from cache
        uses: ./.github/actions/restore-cache

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: ./packages

      - name: Test
        run: yarn test:ci:ui

  test-e2e:
    name: Test E2E
    container:
      # image: synthetixio/docker-e2e:18.12-ubuntu
      image: cypress/browsers:node12.18.3-chrome87-ff82
      env:
        NODE_ENV: development
      ports:
        - 80
      # volumes:
      #   "**/node_modules"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Install docker-compose
        run: |
          # apt clean
          # apt-get update
          apt-get install -y docker-compose

      - name: Run Nitro test node
        uses: OffchainLabs/actions/run-nitro-test-node@main
        with:
          submodules: true

      - name: Restore "node_modules" from cache
        uses: ./.github/actions/restore-cache

      - name: Restore Cypress binary from cache
        uses: martijnhols/actions-cache/restore@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-binary-${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}

      # cache key: 5b2feae1d55694e5cbe795c3f4966f5e696481d1ef1ebb56324919eeba0a515d

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: ./packages

      - run: ls -R ./packages/arb-token-bridge-ui/build
      - run: cat ./packages/arb-token-bridge-ui/build/index.html

      - name: Copy .env
        run: cp ./packages/arb-token-bridge-ui/.e2e.env.sample ./packages/arb-token-bridge-ui/.e2e.env

      - name: Run UI
        run: yarn serve &

      - name: Run tests
        run: yarn test:ci:e2e

      # - name: UI Tests
      #   with:
      #     install: false
      #     start: yarn start
      #     wait-on: 'http://localhost:3000'
      #     wait-on-timeout: 120
      #     browser: chrome
      #     record: true
      #     parallel: false
      #     group: 'UI - Chrome'
      #     spec: cypress/tests/ui/*

  audit:
    name: Audit
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v3

      - name: Restore "node_modules" from cache
        uses: ./.github/actions/restore-cache

      - name: Run audit
        run: yarn audit:ci

  check-formatting:
    name: Check Formatting
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v3

      - name: Restore "node_modules" from cache
        uses: ./.github/actions/restore-cache

      - name: Check formatting with Prettier
        run: yarn prettier:check
