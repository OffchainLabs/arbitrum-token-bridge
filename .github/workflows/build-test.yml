name: Build, Test

on:
  pull_request:
    branches: ["master"]
  push:
    branches: ["master"]
  workflow_dispatch:

env:
  NEXT_PUBLIC_INFURA_KEY: ${{ secrets.NEXT_PUBLIC_INFURA_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  install:
    name: "Install"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install node_modules
        uses: OffchainLabs/actions/node-modules/install@main

  build:
    name: "Build"
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore node_modules
        uses: OffchainLabs/actions/node-modules/restore@main

      - name: Build
        run: yarn build

      - name: Cache build artifacts
        uses: ./.github/actions/build-artifacts/cache

  test-sdk:
    name: "Test SDK"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore node_modules
        uses: OffchainLabs/actions/node-modules/restore@main

      - name: Restore build artifacts
        uses: ./.github/actions/build-artifacts/restore

      - name: Start UI and Test
        run: yarn start-server-and-test 'dev:ui' http://localhost:3000 'yarn test:ci:sdk'

  test-ui:
    name: "Test UI"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore node_modules
        uses: OffchainLabs/actions/node-modules/restore@main

      - name: Restore build artifacts
        uses: ./.github/actions/build-artifacts/restore

      - name: Start UI and Test
        run: yarn start-server-and-test 'dev:ui' http://localhost:3000 'yarn test:ci:ui'

  audit:
    name: "Audit"
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore node_modules
        uses: OffchainLabs/actions/node-modules/restore@main

      - name: Run audit
        run: yarn audit:ci

  check-formatting:
    name: "Check Formatting"
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore node_modules
        uses: OffchainLabs/actions/node-modules/restore@main

      - name: Check formatting with Prettier
        run: yarn prettier:check

  clean-up:
    name: "Clean Up"
    runs-on: ubuntu-latest
    needs: [test-sdk, test-ui]
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install gh-actions-cache
        run: gh extension install actions/gh-actions-cache

      - name: Delete build artifacts
        run: gh actions-cache delete build-artifacts-${{ github.run_id }}-${{ github.run_attempt }} --confirm
