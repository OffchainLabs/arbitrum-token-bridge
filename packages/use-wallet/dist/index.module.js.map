{"version":3,"file":"index.module.js","sources":["../src/index.ts"],"sourcesContent":["import { useCallback } from 'react'\nimport Web3Modal, { ICoreOptions } from 'web3modal'\nimport { Network, Web3Provider } from '@ethersproject/providers'\nimport create from 'zustand'\n\ntype State = {\n  provider: Web3Provider\n  account: Account\n  network: Network\n  web3Modal: Web3Modal\n}\n\nconst useStore = create<Partial<State>>(_set => ({\n  web3Modal: typeof window !== 'undefined' ? new Web3Modal() : undefined\n}))\n\ntype Account = string\ntype ConnectWallet = (opts?: Partial<ICoreOptions>) => Promise<State>\ntype DisconnectWallet = () => void\ntype UseWallet = () => Partial<State> & {\n  connect: ConnectWallet\n  disconnect: DisconnectWallet\n}\n\nexport const useWallet: UseWallet = () => {\n  // Retreive the current values from the store, and automatically re-render on updates\n  const account = useStore(state => state.account)\n  const network = useStore(state => state.network)\n  const provider = useStore(state => state.provider)\n  const web3Modal = useStore(state => state.web3Modal)\n\n  const connect: ConnectWallet = useCallback(async opts => {\n    // Launch modal with the given options\n    const web3Modal = new Web3Modal(opts)\n    const web3ModalProvider = await web3Modal.connect()\n\n    // Set up Ethers provider and initial state with the response from the web3Modal\n    const initialProvider = new Web3Provider(web3ModalProvider, 'any')\n    const getNetwork = () => initialProvider.getNetwork()\n    const initialAccounts = await initialProvider.listAccounts()\n    const initialNetwork = await getNetwork()\n\n    const nextState = {\n      web3Modal,\n      provider: initialProvider,\n      network: initialNetwork,\n      account: initialAccounts[0]\n    }\n\n    // Set up event listeners to handle state changes\n    web3ModalProvider.on('accountsChanged', (accounts: string[]) => {\n      useStore.setState({ account: accounts[0] })\n    })\n\n    web3ModalProvider.on('chainChanged', async (_chainId: string) => {\n      const network = await getNetwork()\n      useStore.setState({ network })\n    })\n\n    web3ModalProvider.on('disconnect', () => {\n      web3Modal.clearCachedProvider()\n    })\n\n    useStore.setState(nextState)\n    return nextState\n  }, [])\n\n  const disconnect: DisconnectWallet = useCallback(async () => {\n    web3Modal?.clearCachedProvider()\n    useStore.setState({\n      provider: undefined,\n      network: undefined,\n      account: undefined\n    })\n  }, [web3Modal])\n\n  return {\n    connect,\n    provider,\n    account,\n    network,\n    disconnect,\n    web3Modal\n  }\n}\n"],"names":["useStore","create","_set","web3Modal","window","Web3Modal","undefined","useWallet","account","state","network","provider","connect","useCallback","opts","Promise","resolve","then","web3ModalProvider","initialProvider","Web3Provider","getNetwork","listAccounts","initialAccounts","initialNetwork","nextState","on","accounts","setState","_chainId","e","reject","clearCachedProvider","disconnect"],"mappings":"4IAYA,IAAMA,EAAWC,EAAuB,SAAAC,GAAI,MAAK,CAC/CC,UAA6B,oBAAXC,OAAyB,IAAIC,OAAcC,EAC9D,GAUYC,EAAuB,WAElC,IAAMC,EAAUR,EAAS,SAAAS,GAAS,OAAAA,EAAMD,OAAO,GACzCE,EAAUV,EAAS,SAAAS,UAASA,EAAMC,OAAO,GACzCC,EAAWX,EAAS,SAAAS,GAAS,OAAAA,EAAME,QAAQ,GAC3CR,EAAYH,EAAS,SAAAS,GAAS,OAAAA,EAAMN,SAAS,GAE7CS,EAAyBC,EAAW,SAAOC,GAAI,IAEnD,IAAMX,EAAY,IAAIE,EAAUS,GAAK,OAAAC,QAAAC,QACLb,EAAUS,WAASK,KAAA,SAA7CC,GAGN,IAAMC,EAAkB,IAAIC,EAAaF,EAAmB,OACtDG,EAAa,kBAAMF,EAAgBE,YAAY,EAAA,OAAAN,QAAAC,QACvBG,EAAgBG,gBAAcL,KAAtDM,SAAAA,UAAeR,QAAAC,QACQK,KAAYJ,KAAA,SAAnCO,GAEN,IAAMC,EAAY,CAChBtB,UAAAA,EACAQ,SAAUQ,EACVT,QAASc,EACThB,QAASe,EAAgB,IAkB3B,OAdAL,EAAkBQ,GAAG,kBAAmB,SAACC,GACvC3B,EAAS4B,SAAS,CAAEpB,QAASmB,EAAS,IACxC,GAEAT,EAAkBQ,GAAG,eAAc,SAASG,GAAoB,IAAA,OAAAd,QAAAC,QACxCK,KAAYJ,KAA5BP,SAAAA,GACNV,EAAS4B,SAAS,CAAElB,QAAAA,GAAU,EAChC,CAAC,MAAAoB,GAAA,OAAAf,QAAAgB,OAAAD,EAAC,CAAA,GAEFZ,EAAkBQ,GAAG,aAAc,WACjCvB,EAAU6B,qBACZ,GAEAhC,EAAS4B,SAASH,GACXA,CAAS,EAClB,EAAA,EAAA,CAAC,MAAAK,GAAA,OAAAf,QAAAgB,OAAAD,EAAA,CAAA,EAAE,IAWH,MAAO,CACLlB,QAAAA,EACAD,SAAAA,EACAH,QAAAA,EACAE,QAAAA,EACAuB,WAdmCpB,EAAuB,WAAA,IAMxD,OALFV,MAAAA,GAAAA,EAAW6B,sBACXhC,EAAS4B,SAAS,CAChBjB,cAAUL,EACVI,aAASJ,EACTE,aAASF,IACTS,QAAAC,SACJ,CAAC,MAAAc,UAAAf,QAAAgB,OAAAD,KAAE,CAAC3B,IAQFA,UAAAA,EAEJ"}